// Atomic:
// Call state app to check state
// Send fees to fee account
// Send earned energy to B
// Send left over energy to A

// create unsigned transactions
goal app call --from=ESCROW_ADDR --app-id=APP_ID --out=state.txn --app-arg="str:UNLOCK"
goal clerk send --from=ESCROW_ADDR --to=FEE_ADDR --amount=FEE_AMOUNT --out=fee.txn
goal clerk send --from=ESCROW_ADDR --to=B_ADDR --amount=EARNED_AMOUNT --out=b.txn
goal clerk send --from=ESCROW_ADDR --to=A_ADDR --amount=LEFT_OVER_AMOUNT --out=a.txn

// combine transactions
cat state.txn fee.txn b.txn a.txn > combinedtransactions.txn

// group transactions
goal clerk group --infile combinedtransactions.txn --outfile groupedtransactions.txn

// sign
goal clerk sign --infile groupedtransactions.txn --outfile signout.txn

// send
goal clerk rawsend --filename signout.txn

// ALGO
/////////

// step 1: LOCK
goal app call --from=$A --app-id=$STATE --app-arg="str:LOCK" --app-arg="addr:$B" --app-arg="int:30" --out=state.txn -w test
goal clerk send --from=$A --to=$ESCROW --amount=$((4000+200)) --out=lock.txn -w test
cat state.txn lock.txn > combinedtransactions.txn
goal clerk group --infile combinedtransactions.txn --outfile groupedtransactions.txn
goal clerk sign --infile groupedtransactions.txn --outfile signout.txn -w test
goal clerk rawsend --filename signout.txn

// step 2: UNLOCK
goal app call --from=$OWNER --app-id=$STATE --app-account=$A --app-account=$B --app-arg="str:UNLOCK" --app-arg="int:$TIME" --out=state.txn -w test
goal clerk send --from-program escrow.teal --to=$A --amount=50 --out=A.txn
goal clerk send --from-program escrow.teal --to=$FEE --amount=$((1000+15)) --out=fee.txn
goal clerk send --from-program escrow.teal --to=$B --amount=135 --out=B.txn
cat state.txn A.txn fee.txn B.txn > combinedtransactions.txn
goal clerk group --infile combinedtransactions.txn --outfile groupedtransactions.txn
goal clerk split --infile groupedtransactions.txn --outfile splitfiles
goal clerk sign --infile splitfiles-0 --outfile splitfiles-0.sig -w test
cat splitfiles-0.sig splitfiles-1 splitfiles-2 splitfiles-3 > signout.txn
goal clerk rawsend --filename signout.txn

// to check
goal app read --app-id=$STATE --local --from=$A
goal clerk dryrun -t signout.txn
goal clerk dryrun -t signout.txn --dryrun-dump  -o dr.json
tealdbg debug state_approvalprogram.teal -d dr.msgp --group-index 0

// ASA
/////////

// step 1: LOCK - A does this
goal app call --from=$A --app-id=$STATE --app-arg="str:LOCK" --app-arg="addr:$B" --app-arg="int:30" --out=state.txn -w test
goal asset send --assetid=$ASA --from=$A --to=$ESCROW --amount=200 --out=lock_asa.txn -w test
goal clerk send --from=$A --to=$ESCROW --amount=5000 --out=lock_algo.txn -w test
cat state.txn lock_asa.txn lock_algo.txn > combinedtransactions.txn
goal clerk group --infile combinedtransactions.txn --outfile groupedtransactions.txn
goal clerk sign --infile groupedtransactions.txn --outfile signout.txn -w test
goal clerk rawsend --filename signout.txn

// step 2: UNLOCK
goal app call --from=$OWNER --app-id=$STATE --app-account=$A --app-account=$B --app-arg="str:UNLOCK" --app-arg="int:$TIME" --out=state.txn -w test
goal asset send --from $ESCROW --to=$A --assetid=$ASA --amount=50 --out=A.txn
// TODO send something back to A if less transactions occurred
goal asset send --from $ESCROW --to=$FEE --assetid=$ASA --amount=15 --out=fee_asa.txn
goal asset send --from $ESCROW --to=$B --assetid=$ASA --amount=135 --out=B.txn
goal clerk send --from-program escrow.teal --to=$FEE --amount=1000 --out=fee_algo.txn
cat state.txn A.txn fee_asa.txn B.txn fee_algo.txn > combinedtransactions.txn
goal clerk group --infile combinedtransactions.txn --outfile groupedtransactions.txn
goal clerk split --infile groupedtransactions.txn --outfile splitfiles
goal clerk sign --infile splitfiles-0 --outfile splitfiles-0.sig -w test
goal clerk sign --infile splitfiles-1 --outfile splitfiles-1.sig --program escrow.teal
goal clerk sign --infile splitfiles-2 --outfile splitfiles-2.sig --program escrow.teal
goal clerk sign --infile splitfiles-3 --outfile splitfiles-3.sig --program escrow.teal
goal clerk sign --infile splitfiles-4 --outfile splitfiles-4.sig --program escrow.teal
cat splitfiles-0.sig splitfiles-1.sig splitfiles-2.sig splitfiles-3.sig splitfiles-4.sig > signout.txn
goal clerk rawsend --filename signout.txn

// Clear state
goal app call --from=$A --app-id=$STATE --app-arg="str:CLEAR" -w test